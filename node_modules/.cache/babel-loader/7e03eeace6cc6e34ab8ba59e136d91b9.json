{"ast":null,"code":"import _slicedToArray from \"/home/amadeus96/Extracts/campaign-management-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/home/amadeus96/Extracts/campaign-management-dashboard/src/Components/Dashboard/Dashboard.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Tabs from \"../Tabs/Tabs\";\nimport DashTable from \"../DashTable/DashTable\";\nimport { MockData } from \"../../MockData/Data\";\nimport \"./Dashboard.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar DashBoard = function DashBoard(_ref) {\n  _s();\n\n  var localeString = _ref.localeString;\n\n  var _useState = useState(\"upcoming\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      activeTab = _useState2[0],\n      setActiveTab = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      tableData = _useState4[0],\n      setData = _useState4[1];\n\n  useEffect(function () {\n    if (localStorage.getItem(\"campaignData\")) {\n      setData(JSON.parse(localStorage.getItem(\"campaignData\")));\n    } else {\n      setData(MockData);\n      localStorage.setItem(\"campaignData\", JSON.stringify(res.data.data));\n    }\n  }, []);\n  var tabsData = {\n    upcoming: [],\n    past: [],\n    live: []\n  };\n\n  for (var i = 0; i < tableData.length; i++) {\n    var diffTime = new Date(tableData[i].createdOn) - new Date();\n    var diffTimeAbs = Math.abs(diffTime);\n    var diffDays = diffTimeAbs / (1000 * 60 * 60 * 24);\n\n    if (diffDays > 1 && diffTime < 0) {\n      tabsData[\"past\"].push(tableData[i]);\n    } else if (diffDays > 0 && diffTime > 0) {\n      tabsData[\"upcoming\"].push(tableData[i]);\n    } else {\n      tabsData[\"live\"].push(tableData[i]);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashBoard\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: localeString.manage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Tabs, {\n      setActiveTab: setActiveTab,\n      activeTab: activeTab,\n      localeString: localeString\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(DashTable, {\n      data: tabsData[activeTab],\n      tableData: tableData,\n      activeTab: activeTab,\n      setData: setData,\n      localeString: localeString\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(DashBoard, \"Xz/lZKk7p2cj+Y/0duM4ci9T7jA=\");\n\n_c = DashBoard;\nexport default DashBoard;\n\nvar _c;\n\n$RefreshReg$(_c, \"DashBoard\");","map":{"version":3,"sources":["/home/amadeus96/Extracts/campaign-management-dashboard/src/Components/Dashboard/Dashboard.js"],"names":["React","useState","useEffect","Tabs","DashTable","MockData","DashBoard","localeString","activeTab","setActiveTab","tableData","setData","localStorage","getItem","JSON","parse","setItem","stringify","res","data","tabsData","upcoming","past","live","i","length","diffTime","Date","createdOn","diffTimeAbs","Math","abs","diffDays","push","manage"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Tabs from \"../Tabs/Tabs\";\nimport DashTable from \"../DashTable/DashTable\";\n\nimport { MockData } from \"../../MockData/Data\";\nimport \"./Dashboard.css\";\n\nconst DashBoard = ({ localeString }) => {\n  let [activeTab, setActiveTab] = useState(\"upcoming\");\n  let [tableData, setData] = useState([]);\n\n  useEffect(() => {\n    if (localStorage.getItem(\"campaignData\")) {\n      setData(JSON.parse(localStorage.getItem(\"campaignData\")));\n    } else {\n      setData(MockData);\n\n      localStorage.setItem(\"campaignData\", JSON.stringify(res.data.data));\n    }\n  }, []);\n\n  let tabsData = {\n    upcoming: [],\n    past: [],\n    live: [],\n  };\n\n  for (let i = 0; i < tableData.length; i++) {\n    const diffTime = new Date(tableData[i].createdOn) - new Date();\n    const diffTimeAbs = Math.abs(diffTime);\n    const diffDays = diffTimeAbs / (1000 * 60 * 60 * 24);\n    if (diffDays > 1 && diffTime < 0) {\n      tabsData[\"past\"].push(tableData[i]);\n    } else if (diffDays > 0 && diffTime > 0) {\n      tabsData[\"upcoming\"].push(tableData[i]);\n    } else {\n      tabsData[\"live\"].push(tableData[i]);\n    }\n  }\n  return (\n    <div className=\"dashBoard\">\n      <h1>{localeString.manage}</h1>\n      <Tabs\n        setActiveTab={setActiveTab}\n        activeTab={activeTab}\n        localeString={localeString}\n      />\n      <DashTable\n        data={tabsData[activeTab]}\n        tableData={tableData}\n        activeTab={activeTab}\n        setData={setData}\n        localeString={localeString}\n      />\n    </div>\n  );\n};\nexport default DashBoard;\n"]},"metadata":{},"sourceType":"module"}